import "address_resolver.ral"
import "name_resolver.ral"
import "pubkey_resolver.ral"
import "constants.ral"

Contract DefaultResolver(
  ansRegistryId: ByteVec,
  addressInfoTemplateId: ByteVec,
  nameInfoTemplateId: ByteVec,
  pubkeyInfoTemplateId: ByteVec
) extends AddressResolver(ansRegistryId, addressInfoTemplateId),
          NameResolver(ansRegistryId, nameInfoTemplateId),
          PubkeyResolver(ansRegistryId, pubkeyInfoTemplateId),
          Constants()
{
  pub fn removeNode(node: ByteVec, refundAddress: Address) -> () {
    let owner = getOwner(node)
    assert!(callerAddress!() == owner, ErrorCodes.InvalidCaller)
    removeAddressInfo(node, refundAddress)
    removeNameInfo(node, refundAddress)
    removePubkeyInfo(node, refundAddress)
  }
}
