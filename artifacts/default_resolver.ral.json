{
  "sourceCodeSha256": "ac1e5c233e62e1880810d50e96d84b138b9958379ddae6d72bd420e23eb334d1",
  "bytecode": "04124033404f406940c040cf40dc40f84124413e416d41b541cf41fb422a4272428c42b842dc000303050017160000081703b41603450c7bb116011302641704160213c40de0b6b3a7640000a2140100160044a0011604c118010302020008b413c40de0b6b3a7640000a216001344d21601470003010302020007b413c40de0b6b3a7640000a21600133c160100030103030700402db41703160316000008450c7b140100160044b17c444e4e17041604c54c0916041705160116020e0c160501004a1016016716024366441602441706160313c40de0b6b3a7640000a2160016061603000001000101010516001344d2000663020100010101041600133c00060201000203010f140100160044b17c444e4e170216010d0d1602010102010002040019b416000008450c7b140100160044b17c444e4e17021602c54c071602170316010d0c1603010201000103010da0001600444e4e1701160117020c0d1602010102000303040015b416000008450c7bb116011302641703160213c40de0b6b3a7640000a2140101160044a0021603c11801030205004023b41702160216000008450c7b140101160044b17c444e4e17031603c54c081603170416010d0c160401014a07160213c40de0b6b3a7640000a2160016011602000901000102010e140101160044b17c444e4e17010c0d1601010002010002040019b416000008450c7b140101160044b17c444e4e17021602c54c071602170316010d0c16030102000303040015b416000008450c7bb116011302641703160213c40de0b6b3a7640000a2140102160044a0031603c11801030205004023b41702160216000008450c7b140102160044b17c444e4e17031603c54c081603170416010d0c160401014a07160213c40de0b6b3a7640000a2160016011602000d01000102010e140102160044b17c444e4e17010c0d1601010002010002040019b416000008450c7b140102160044b17c444e4e17021602c54c071602170316010d0c16030102010002030011160000081702b41602450c7b16001601000716001601000c160016010010",
  "codeHash": "a7f7be785251ff461ce36e5bc3700d5aaaf1bcd7389b706117f967b0fb635e8a",
  "fieldsSig": {
    "signature": "Contract DefaultResolver(ansRegistryId:ByteVec,addressInfoTemplateId:ByteVec,nameInfoTemplateId:ByteVec,pubkeyInfoTemplateId:ByteVec)",
    "names": [
      "ansRegistryId",
      "addressInfoTemplateId",
      "nameInfoTemplateId",
      "pubkeyInfoTemplateId"
    ],
    "types": [
      "ByteVec",
      "ByteVec",
      "ByteVec",
      "ByteVec"
    ]
  },
  "eventsSig": [],
  "functions": [
    {
      "name": "createAddressInfo",
      "signature": "@using(preapprovedAssets=true) createAddressInfo(node:ByteVec,payload:ByteVec,payer:Address)->()",
      "argNames": [
        "node",
        "payload",
        "payer"
      ],
      "argTypes": [
        "ByteVec",
        "ByteVec",
        "Address"
      ],
      "returnTypes": []
    },
    {
      "name": "setAlphAddress",
      "signature": "@using(preapprovedAssets=true) pub setAlphAddress(node:ByteVec,address:Address)->()",
      "argNames": [
        "node",
        "address"
      ],
      "argTypes": [
        "ByteVec",
        "Address"
      ],
      "returnTypes": []
    },
    {
      "name": "setEthAddress",
      "signature": "@using(preapprovedAssets=true) pub setEthAddress(node:ByteVec,address:ByteVec)->()",
      "argNames": [
        "node",
        "address"
      ],
      "argTypes": [
        "ByteVec",
        "ByteVec"
      ],
      "returnTypes": []
    },
    {
      "name": "setAddress",
      "signature": "@using(preapprovedAssets=true) pub setAddress(node:ByteVec,chainId:U256,address:ByteVec)->()",
      "argNames": [
        "node",
        "chainId",
        "address"
      ],
      "argTypes": [
        "ByteVec",
        "U256",
        "ByteVec"
      ],
      "returnTypes": []
    },
    {
      "name": "getAlphAddress",
      "signature": "pub getAlphAddress(node:ByteVec)->(Address)",
      "argNames": [
        "node"
      ],
      "argTypes": [
        "ByteVec"
      ],
      "returnTypes": [
        "Address"
      ]
    },
    {
      "name": "getEthAddress",
      "signature": "pub getEthAddress(node:ByteVec)->(ByteVec)",
      "argNames": [
        "node"
      ],
      "argTypes": [
        "ByteVec"
      ],
      "returnTypes": [
        "ByteVec"
      ]
    },
    {
      "name": "getAddress",
      "signature": "pub getAddress(node:ByteVec,chainId:U256)->(ByteVec)",
      "argNames": [
        "node",
        "chainId"
      ],
      "argTypes": [
        "ByteVec",
        "U256"
      ],
      "returnTypes": [
        "ByteVec"
      ]
    },
    {
      "name": "removeAddressInfo",
      "signature": "pub removeAddressInfo(node:ByteVec,refundAddress:Address)->()",
      "argNames": [
        "node",
        "refundAddress"
      ],
      "argTypes": [
        "ByteVec",
        "Address"
      ],
      "returnTypes": []
    },
    {
      "name": "getOwner",
      "signature": "pub getOwner(node:ByteVec)->(Address)",
      "argNames": [
        "node"
      ],
      "argTypes": [
        "ByteVec"
      ],
      "returnTypes": [
        "Address"
      ]
    },
    {
      "name": "createNameInfo",
      "signature": "@using(preapprovedAssets=true) createNameInfo(node:ByteVec,name:ByteVec,payer:Address)->()",
      "argNames": [
        "node",
        "name",
        "payer"
      ],
      "argTypes": [
        "ByteVec",
        "ByteVec",
        "Address"
      ],
      "returnTypes": []
    },
    {
      "name": "setName",
      "signature": "@using(preapprovedAssets=true) pub setName(node:ByteVec,name:ByteVec)->()",
      "argNames": [
        "node",
        "name"
      ],
      "argTypes": [
        "ByteVec",
        "ByteVec"
      ],
      "returnTypes": []
    },
    {
      "name": "getName",
      "signature": "pub getName(node:ByteVec)->(ByteVec)",
      "argNames": [
        "node"
      ],
      "argTypes": [
        "ByteVec"
      ],
      "returnTypes": [
        "ByteVec"
      ]
    },
    {
      "name": "removeNameInfo",
      "signature": "pub removeNameInfo(node:ByteVec,refundAddress:Address)->()",
      "argNames": [
        "node",
        "refundAddress"
      ],
      "argTypes": [
        "ByteVec",
        "Address"
      ],
      "returnTypes": []
    },
    {
      "name": "createPubkeyInfo",
      "signature": "@using(preapprovedAssets=true) createPubkeyInfo(node:ByteVec,pubkey:ByteVec,payer:Address)->()",
      "argNames": [
        "node",
        "pubkey",
        "payer"
      ],
      "argTypes": [
        "ByteVec",
        "ByteVec",
        "Address"
      ],
      "returnTypes": []
    },
    {
      "name": "setPubkey",
      "signature": "@using(preapprovedAssets=true) pub setPubkey(node:ByteVec,pubkey:ByteVec)->()",
      "argNames": [
        "node",
        "pubkey"
      ],
      "argTypes": [
        "ByteVec",
        "ByteVec"
      ],
      "returnTypes": []
    },
    {
      "name": "getPubkey",
      "signature": "pub getPubkey(node:ByteVec)->(ByteVec)",
      "argNames": [
        "node"
      ],
      "argTypes": [
        "ByteVec"
      ],
      "returnTypes": [
        "ByteVec"
      ]
    },
    {
      "name": "removePubkeyInfo",
      "signature": "pub removePubkeyInfo(node:ByteVec,refundAddress:Address)->()",
      "argNames": [
        "node",
        "refundAddress"
      ],
      "argTypes": [
        "ByteVec",
        "Address"
      ],
      "returnTypes": []
    },
    {
      "name": "removeNode",
      "signature": "pub removeNode(node:ByteVec,refundAddress:Address)->()",
      "argNames": [
        "node",
        "refundAddress"
      ],
      "argTypes": [
        "ByteVec",
        "Address"
      ],
      "returnTypes": []
    }
  ]
}